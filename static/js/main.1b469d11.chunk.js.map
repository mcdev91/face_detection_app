{"version":3,"sources":["components/Logo/LogoPng.png","components/FaceRecognition/FaceRecognition.js","components/Navigation/Navigation.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FaceRecognition","imageUrl","box","showImage","className","id","alt","src","width","height","map","item","index","style","top","toprow","right","rightcol","bottom","bottomrow","left","leftcol","key","Navigation","onRouteChange","isSignedIn","display","justifyContent","onClick","SignIn","htmlFor","type","name","value","Register","Logo","options","max","LogoPng","ImageLinkForm","onInputChange","onButtonSubmit","onChange","placeholder","Rank","app","Clarifai","App","apiKey","particleprams","particles","number","density","enable","value_area","calculateFaceLocation","data","i","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","state","event","input","target","models","predict","FACE_DETECT_MODEL","then","response","length","catch","err","route","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1b469d11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LogoPng.4fce0fc3.png\";","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, box, showImage}) => {\r\n    return(\r\n        <div className=\"center ma\">\r\n            <div className='image-container absolute mt2 white'>\r\n                { showImage === true && (\r\n                    <img id='inputimage' alt={\"I'm waiting for Url please Insert it!\"} src={imageUrl} width=\"400px\" height=\"auto\" />\r\n                )\r\n                }\r\n                { showImage === false && (\r\n                    <p className=\"f3\">{'Give it a try!'}</p>\r\n                )\r\n                }\r\n                { box.map((item, index) => (\r\n                    <div className='bounding_box' style={{top: item.toprow, right: item.rightcol, bottom: item.bottomrow, left: item.leftcol}} key={index}></div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p className='f3 link dim white pa3 pointer' onClick={() => onRouteChange('signout')}>Sign Out</p>\r\n            </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p className='f3 link dim white pa3 pointer' onClick={() => onRouteChange('signin')}>Sign In</p>\r\n                <p className='f3 link dim white pa3 pointer' onClick={() => onRouteChange('register')}>Register</p>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n    return (\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 white-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\" />\r\n                    <legend className=\"f1 fw6 ph0 mh0 center\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <input\r\n                            onClick={() => onRouteChange('home')}\r\n                            className=\"white ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"submit\"\r\n                            value=\"Sign in\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                        <p\r\n                            onClick={() => onRouteChange('register')}\r\n                            className=\"f6 link dim white db pointer\">Register</p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n    return (\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 white-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\" />\r\n                    <legend className=\"f1 fw6 ph0 mh0 center\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\" />\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <input\r\n                            onClick={() => onRouteChange('home')}\r\n                            className=\"white ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"submit\"\r\n                            value=\"Register\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport LogoPng from './LogoPng.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max: 50 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner\">\r\n                    <img src={LogoPng} alt='logo' />\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit}) => {\r\n    return(\r\n        <div className=\"ma4 mt0\">\r\n                <p className=\"discription-text bold f3 mw6 center white\">\r\n                    {'This AI magic will detect faces'}\r\n                </p>\r\n                <p className=\"discription-text f3 mw5 center white\">\r\n                    {'Paste image Url'}\r\n                </p>\r\n            <div className='center'>\r\n                <div className=\"form center pa4 br3 shadow-5\">\r\n                    <input className=\"f4 pa2 w-70 center input-container b--white-025\" type='text' onChange={onInputChange} placeholder=\"Paste image url\"/>\r\n                    <button   className='w-30 f4 link ph3 pv2 dib white bg-black b--white-025' onClick={onButtonSubmit}>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n    return (\r\n        <div className=''>\r\n            <div className='white f3 '>\r\n                {'User, you rank is...'}\r\n            </div>\r\n            <div className='white f1 '>\r\n                {'#1'}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '12ad7e15d6e542b889f75d650c185154'\n});\n\nconst particleprams = {\n  particles: {\n    number: {\n      value: 180,\n      density: {\n        enable: true,\n        value_area: 700\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: [],\n      route: 'signin',\n      isSignedIn: false,\n      showImage: false\n    }\n  }\n\n  calculateFaceLocation = (data, i) => {\n    let clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n    let image = document.getElementById('inputimage');\n    let width = Number(image.width);\n    let height = Number(image.height);\n    return {\n      leftcol: clarifaiFace.left_col * width -10,\n      toprow: clarifaiFace.top_row * height -10,\n      rightcol: width - (clarifaiFace.right_col * width +10),\n      bottomrow: height - (clarifaiFace.bottom_row * height +10)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({\n      box: [...this.state.box, box]\n    });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({\n      box: [],\n      imageUrl: this.state.input,\n      showImage: true\n    });\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n      .then(response => {\n        for (let i = 0; i < response.outputs[0].data.regions.length; i++) {\n          this.displayFaceBox(this.calculateFaceLocation(response, i))\n        }\n      }\n      )\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({ isSignedIn: false })\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles\n          className=\"particles\"\n          params={particleprams} />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        {\n          this.state.route === \"home\"\n            ? <div>\n              <Logo />\n              <Rank />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} showImage={this.state.showImage} />\n            </div>\n            : (\n              this.state.route === \"signin\"\n                ? <SignIn onRouteChange={this.onRouteChange} />\n                : <Register onRouteChange={this.onRouteChange} />\n            )\n\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}